---

- name: Create '/boot/firmware/' directory
  file:
    path: /boot/firmware/
    state: directory

- name: Configure boot options (enable cgroup)
  shell: "echo '{{ boot_options }}' > /boot/firmware/cmdline.txt"

- name: Add RTC module configuration
  blockinfile:
    path: /boot/firmware/config.txt
    block: |
      dtparam=i2c_arm=on
      dtoverlay=i2c-rtc,ds3231

- name: Install tools
  shell: apt install net-tools i2c-tools -y

- name: Flush network interface
  shell: ip a flush dev eth1

- name: Set Static ip
  shell: "ip a add {{ rpi_static_ip }}/24 dev eth1"

- name: Ensure network interface is up
  shell: ifconfig eth1 up

- name: Add Kubic repo
  shell: ". /etc/os-release && sudo sh -c \"echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list\" && wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_${VERSION_ID}/Release.key -O- | sudo apt-key add - "

- name: Refresh cache
  apt:
    update_cache: yes

- name: Install 'skopeo'
  shell: apt install skopeo -y

- name: Ensure default ubuntu user is removed
  user:
    name: ubuntu
    state: absent
    remove: yes

- name: Hash user password (needed for MacOS compatibility)
  shell: "openssl passwd -salt {{ 9999 | random }} -1 {{ cluster_user_password }}"
  register: hash_password_command_output
  become: false
  delegate_to: 127.0.0.1

- name: "Ensure '{{ cluster_user }}' has the default password"
  user:
    name: "{{ cluster_user }}"
    state: present
    shell: /bin/bash
    password: "{{ hash_password_command_output.stdout }}"

- name: Install 'unzip' and 'nfs-common'
  shell: apt install unzip nfs-common -y

- name: "Ensure '{{ cluster_disk_mount_point }}' mount point is set according to cluster_disk: '{{ cluster_disk }}'"
  file:
    path: "{{ cluster_disk_mount_point }}"
    state: "{{ 'directory' if cluster_disk == 'present' else 'absent' }}"

- name: "Ensure auto-mount options for '{{ cluster_disk_label }}' are set according to cluster_disk: '{{ cluster_disk }}'"
  lineinfile:
    path: /etc/fstab
    regexp: "LABEL={{ cluster_disk_label }}"
    state: "{{ cluster_disk | default (absent) }}"
    line: "LABEL={{ cluster_disk_label }}       {{ cluster_disk_mount_point }}  ext4    defaults        0       1"
  when: cluster_disk_label is defined
