---
- name: Install Depencencies
  apt:
    name:
      - openssl
      - zip
      - inotify-tools

- name: Ensure 'usb-autorunner' installation directory exists
  file:
    path: "{{ usb_autorunner_install_path }}"
    state: directory

- name: Ensure autorunner work directory exists
  file:
    path: "{{ usb_autorunner_install_path }}/workdir"
    state: directory

- name: Ensure autorunner certificate directory exists
  file:
    path: "{{ usb_autorunner_install_path }}/certificate"
    state: directory

- name: Create encryption private key
  copy:
    src: certificate/autorunner.pem
    dest: "{{ usb_autorunner_install_path }}/certificate/autorunner.pem"
    mode: 0600

- name: Create encryption public key
  copy:
    src: certificate/autorunner.pub.pem
    dest: "{{ usb_autorunner_install_path }}/certificate/autorunner.pub.pem"

- name: Copy 'usb-discovery.service'
  template:
    src: "{{ role_path }}/files/usb-discovery.service.j2"
    dest: "/etc/systemd/system/usb-discovery.service"

- name: Copy 'autorunner.sh'
  template:
    src: "{{ role_path }}/files/autorunner.sh.j2"
    dest: "{{ usb_autorunner_install_path }}/autorunner.sh"
    mode: u=+rwx,g=rx,o=r

- name: Copy 'usb-discovery.sh'
  template:
    src: "{{ role_path }}/files/usb-discovery.sh.j2"
    dest: "{{ usb_autorunner_install_path }}/usb-discovery.sh"
    mode: u=+rwx,g=rx,o=r

- name: Ensure USB Autorunner is enabled
  systemd:
    name: usb-discovery
    enabled: yes

- name: Create temporary test directory
  tempfile:
    state: directory
    suffix: build
  register: temp_test_folder

- name: Copy 'startup.sh'
  template:
    src: "{{ role_path }}/files/startup.zip"
    dest: "{{ temp_test_folder.path }}/startup.zip"

- name: Create random key
  shell: openssl rand -base64 32 > {{ temp_test_folder.path }}/secret.key

- name: Encrypt the key
  shell: openssl rsautl -encrypt -oaep -pubin -inkey {{ usb_autorunner_install_path }}/certificate/autorunner.pub.pem -in {{ temp_test_folder.path }}/secret.key -out {{ temp_test_folder.path }}/secret.key.enc

- name: Encrypt the file
  shell: openssl aes-256-cbc -pbkdf2 -in {{ temp_test_folder.path }}/startup.zip -out {{ temp_test_folder.path }}/startup.zip.enc -pass file:{{ temp_test_folder.path }}/secret.key

- name: Test the service
  shell: "{{ usb_autorunner_install_path }}/autorunner.sh {{ temp_test_folder.path }}"
